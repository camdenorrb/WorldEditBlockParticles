// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: particles.proto

// Protobuf Java Version: 3.25.2
package dev.twelveoclock.worldeditblockparticles.proto;

/**
 * Protobuf enum {@code store.Particle}
 */
public enum Particle
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <code>PARTICLE_ASH = 0;</code>
   */
  PARTICLE_ASH(0),
  /**
   * <code>PARTICLE_BLOCK_CRACK = 1;</code>
   */
  PARTICLE_BLOCK_CRACK(1),
  /**
   * <code>PARTICLE_BLOCK_DUST = 2;</code>
   */
  PARTICLE_BLOCK_DUST(2),
  /**
   * <code>PARTICLE_BLOCK_MARKER = 3;</code>
   */
  PARTICLE_BLOCK_MARKER(3),
  /**
   * <code>PARTICLE_BUBBLE_COLUMN_UP = 4;</code>
   */
  PARTICLE_BUBBLE_COLUMN_UP(4),
  /**
   * <code>PARTICLE_BUBBLE_POP = 5;</code>
   */
  PARTICLE_BUBBLE_POP(5),
  /**
   * <code>PARTICLE_CAMPFIRE_COSY_SMOKE = 6;</code>
   */
  PARTICLE_CAMPFIRE_COSY_SMOKE(6),
  /**
   * <code>PARTICLE_CAMPFIRE_SIGNAL_SMOKE = 7;</code>
   */
  PARTICLE_CAMPFIRE_SIGNAL_SMOKE(7),
  /**
   * <code>PARTICLE_CHERRY_LEAVES = 8;</code>
   */
  PARTICLE_CHERRY_LEAVES(8),
  /**
   * <code>PARTICLE_CLOUD = 9;</code>
   */
  PARTICLE_CLOUD(9),
  /**
   * <code>PARTICLE_COMPOSTER = 10;</code>
   */
  PARTICLE_COMPOSTER(10),
  /**
   * <code>PARTICLE_CRIMSON_SPORE = 11;</code>
   */
  PARTICLE_CRIMSON_SPORE(11),
  /**
   * <code>PARTICLE_CRIT = 12;</code>
   */
  PARTICLE_CRIT(12),
  /**
   * <code>PARTICLE_CURRENT_DOWN = 13;</code>
   */
  PARTICLE_CURRENT_DOWN(13),
  /**
   * <code>PARTICLE_DAMAGE_INDICATOR = 14;</code>
   */
  PARTICLE_DAMAGE_INDICATOR(14),
  /**
   * <code>PARTICLE_DOLPHIN = 15;</code>
   */
  PARTICLE_DOLPHIN(15),
  /**
   * <code>PARTICLE_DRAGON_BREATH = 16;</code>
   */
  PARTICLE_DRAGON_BREATH(16),
  /**
   * <code>PARTICLE_DRIP_LAVA = 17;</code>
   */
  PARTICLE_DRIP_LAVA(17),
  /**
   * <code>PARTICLE_DRIP_WATER = 18;</code>
   */
  PARTICLE_DRIP_WATER(18),
  /**
   * <code>PARTICLE_DRIPPING_DRIPSTONE_LAVA = 19;</code>
   */
  PARTICLE_DRIPPING_DRIPSTONE_LAVA(19),
  /**
   * <code>PARTICLE_DRIPPING_DRIPSTONE_WATER = 20;</code>
   */
  PARTICLE_DRIPPING_DRIPSTONE_WATER(20),
  /**
   * <code>PARTICLE_DRIPPING_HONEY = 21;</code>
   */
  PARTICLE_DRIPPING_HONEY(21),
  /**
   * <code>PARTICLE_DRIPPING_OBSIDIAN_TEAR = 22;</code>
   */
  PARTICLE_DRIPPING_OBSIDIAN_TEAR(22),
  /**
   * <code>PARTICLE_DUST_COLOR_TRANSITION = 23;</code>
   */
  PARTICLE_DUST_COLOR_TRANSITION(23),
  /**
   * <code>PARTICLE_DUST_PLUME = 24;</code>
   */
  PARTICLE_DUST_PLUME(24),
  /**
   * <code>PARTICLE_EGG_CRACK = 25;</code>
   */
  PARTICLE_EGG_CRACK(25),
  /**
   * <code>PARTICLE_ELECTRIC_SPARK = 26;</code>
   */
  PARTICLE_ELECTRIC_SPARK(26),
  /**
   * <code>PARTICLE_ENCHANTMENT_TABLE = 27;</code>
   */
  PARTICLE_ENCHANTMENT_TABLE(27),
  /**
   * <code>PARTICLE_END_ROD = 28;</code>
   */
  PARTICLE_END_ROD(28),
  /**
   * <code>PARTICLE_EXPLOSION_HUGE = 29;</code>
   */
  PARTICLE_EXPLOSION_HUGE(29),
  /**
   * <code>PARTICLE_EXPLOSION_LARGE = 30;</code>
   */
  PARTICLE_EXPLOSION_LARGE(30),
  /**
   * <code>PARTICLE_EXPLOSION_NORMAL = 31;</code>
   */
  PARTICLE_EXPLOSION_NORMAL(31),
  /**
   * <code>PARTICLE_FALLING_DRIPSTONE_LAVA = 32;</code>
   */
  PARTICLE_FALLING_DRIPSTONE_LAVA(32),
  /**
   * <code>PARTICLE_FALLING_DRIPSTONE_WATER = 33;</code>
   */
  PARTICLE_FALLING_DRIPSTONE_WATER(33),
  /**
   * <code>PARTICLE_FALLING_DUST = 34;</code>
   */
  PARTICLE_FALLING_DUST(34),
  /**
   * <code>PARTICLE_FALLING_HONEY = 35;</code>
   */
  PARTICLE_FALLING_HONEY(35),
  /**
   * <code>PARTICLE_FALLING_LAVA = 36;</code>
   */
  PARTICLE_FALLING_LAVA(36),
  /**
   * <code>PARTICLE_FALLING_NECTAR = 37;</code>
   */
  PARTICLE_FALLING_NECTAR(37),
  /**
   * <code>PARTICLE_FALLING_OBSIDIAN_TEAR = 38;</code>
   */
  PARTICLE_FALLING_OBSIDIAN_TEAR(38),
  /**
   * <code>PARTICLE_FALLING_SPORE_BLOSSOM = 39;</code>
   */
  PARTICLE_FALLING_SPORE_BLOSSOM(39),
  /**
   * <code>PARTICLE_FALLING_WATER = 40;</code>
   */
  PARTICLE_FALLING_WATER(40),
  /**
   * <code>PARTICLE_FIREWORKS_SPARK = 41;</code>
   */
  PARTICLE_FIREWORKS_SPARK(41),
  /**
   * <code>PARTICLE_FLAME = 42;</code>
   */
  PARTICLE_FLAME(42),
  /**
   * <code>PARTICLE_FLASH = 43;</code>
   */
  PARTICLE_FLASH(43),
  /**
   * <code>PARTICLE_GLOW = 44;</code>
   */
  PARTICLE_GLOW(44),
  /**
   * <code>PARTICLE_GLOW_SQUID_INK = 45;</code>
   */
  PARTICLE_GLOW_SQUID_INK(45),
  /**
   * <code>PARTICLE_GUST = 46;</code>
   */
  PARTICLE_GUST(46),
  /**
   * <code>PARTICLE_GUST_DUST = 47;</code>
   */
  PARTICLE_GUST_DUST(47),
  /**
   * <code>PARTICLE_GUST_EMITTER = 48;</code>
   */
  PARTICLE_GUST_EMITTER(48),
  /**
   * <code>PARTICLE_HEART = 49;</code>
   */
  PARTICLE_HEART(49),
  /**
   * <code>PARTICLE_ITEM_CRACK = 50;</code>
   */
  PARTICLE_ITEM_CRACK(50),
  /**
   * <code>PARTICLE_LANDING_HONEY = 51;</code>
   */
  PARTICLE_LANDING_HONEY(51),
  /**
   * <code>PARTICLE_LANDING_LAVA = 52;</code>
   */
  PARTICLE_LANDING_LAVA(52),
  /**
   * <code>PARTICLE_LANDING_OBSIDIAN_TEAR = 53;</code>
   */
  PARTICLE_LANDING_OBSIDIAN_TEAR(53),
  /**
   * <code>PARTICLE_LAVA = 54;</code>
   */
  PARTICLE_LAVA(54),
  /**
   * <code>PARTICLE_LEGACY_BLOCK_CRACK = 55;</code>
   */
  PARTICLE_LEGACY_BLOCK_CRACK(55),
  /**
   * <code>PARTICLE_LEGACY_BLOCK_DUST = 56;</code>
   */
  PARTICLE_LEGACY_BLOCK_DUST(56),
  /**
   * <code>PARTICLE_LEGACY_FALLING_DUST = 57;</code>
   */
  PARTICLE_LEGACY_FALLING_DUST(57),
  /**
   * <code>PARTICLE_MOB_APPEARANCE = 58;</code>
   */
  PARTICLE_MOB_APPEARANCE(58),
  /**
   * <code>PARTICLE_NAUTILUS = 59;</code>
   */
  PARTICLE_NAUTILUS(59),
  /**
   * <code>PARTICLE_NOTE = 60;</code>
   */
  PARTICLE_NOTE(60),
  /**
   * <code>PARTICLE_PORTAL = 61;</code>
   */
  PARTICLE_PORTAL(61),
  /**
   * <code>PARTICLE_REDSTONE = 62;</code>
   */
  PARTICLE_REDSTONE(62),
  /**
   * <code>PARTICLE_REVERSE_PORTAL = 63;</code>
   */
  PARTICLE_REVERSE_PORTAL(63),
  /**
   * <code>PARTICLE_SCRAPE = 64;</code>
   */
  PARTICLE_SCRAPE(64),
  /**
   * <code>PARTICLE_SCULK_CHARGE = 65;</code>
   */
  PARTICLE_SCULK_CHARGE(65),
  /**
   * <code>PARTICLE_SCULK_CHARGE_POP = 66;</code>
   */
  PARTICLE_SCULK_CHARGE_POP(66),
  /**
   * <code>PARTICLE_SHRIEK = 67;</code>
   */
  PARTICLE_SHRIEK(67),
  /**
   * <code>PARTICLE_SLIME = 68;</code>
   */
  PARTICLE_SLIME(68),
  /**
   * <code>PARTICLE_SMALL_FLAME = 69;</code>
   */
  PARTICLE_SMALL_FLAME(69),
  /**
   * <code>PARTICLE_SMOKE_LARGE = 70;</code>
   */
  PARTICLE_SMOKE_LARGE(70),
  /**
   * <code>PARTICLE_SMOKE_NORMAL = 71;</code>
   */
  PARTICLE_SMOKE_NORMAL(71),
  /**
   * <code>PARTICLE_NORMAL = 72;</code>
   */
  PARTICLE_NORMAL(72),
  /**
   * <code>PARTICLE_SNEEZE = 73;</code>
   */
  PARTICLE_SNEEZE(73),
  /**
   * <code>PARTICLE_SNOW_SHOVEL = 74;</code>
   */
  PARTICLE_SNOW_SHOVEL(74),
  /**
   * <code>PARTICLE_SNOWBALL = 75;</code>
   */
  PARTICLE_SNOWBALL(75),
  /**
   * <code>PARTICLE_SONICFLAKE = 76;</code>
   */
  PARTICLE_SONICFLAKE(76),
  /**
   * <code>PARTICLE_SOUL = 77;</code>
   */
  PARTICLE_SOUL(77),
  /**
   * <code>PARTICLE_SOUL_FIRE_FLAME = 78;</code>
   */
  PARTICLE_SOUL_FIRE_FLAME(78),
  /**
   * <code>PARTICLE_SPELL = 79;</code>
   */
  PARTICLE_SPELL(79),
  /**
   * <code>PARTICLE_SPELL_INSTANT = 80;</code>
   */
  PARTICLE_SPELL_INSTANT(80),
  /**
   * <code>PARTICLE_SPELL_MOB = 81;</code>
   */
  PARTICLE_SPELL_MOB(81),
  /**
   * <code>PARTICLE_SPELL_MOB_AMBIENT = 82;</code>
   */
  PARTICLE_SPELL_MOB_AMBIENT(82),
  /**
   * <code>PARTICLE_SPELL_WITCH = 83;</code>
   */
  PARTICLE_SPELL_WITCH(83),
  /**
   * <code>PARTICLE_SPIT = 84;</code>
   */
  PARTICLE_SPIT(84),
  /**
   * <code>PARTICLE_SPORE_BLOSSOM_AIR = 85;</code>
   */
  PARTICLE_SPORE_BLOSSOM_AIR(85),
  /**
   * <code>PARTICLE_SQUID_INK = 86;</code>
   */
  PARTICLE_SQUID_INK(86),
  /**
   * <code>PARTICLE_SUSPENDED = 87;</code>
   */
  PARTICLE_SUSPENDED(87),
  /**
   * <code>PARTICLE_SUSPENDED_DEPTH = 88;</code>
   */
  PARTICLE_SUSPENDED_DEPTH(88),
  /**
   * <code>PARTICLE_SWEEP_ATTACK = 89;</code>
   */
  PARTICLE_SWEEP_ATTACK(89),
  /**
   * <code>PARTICLE_TOTEM = 90;</code>
   */
  PARTICLE_TOTEM(90),
  /**
   * <code>PARTICLE_TOWN_AURA = 91;</code>
   */
  PARTICLE_TOWN_AURA(91),
  /**
   * <code>PARTICLE_TRIAL_SPAWNER_DETECTION = 92;</code>
   */
  PARTICLE_TRIAL_SPAWNER_DETECTION(92),
  /**
   * <code>PARTICLE_VIBRATION = 93;</code>
   */
  PARTICLE_VIBRATION(93),
  /**
   * <code>PARTICLE_VILLAGER_ANGRY = 94;</code>
   */
  PARTICLE_VILLAGER_ANGRY(94),
  /**
   * <code>PARTICLE_VILLAGER_HAPPY = 95;</code>
   */
  PARTICLE_VILLAGER_HAPPY(95),
  /**
   * <code>PARTICLE_WARPED_SPORE = 96;</code>
   */
  PARTICLE_WARPED_SPORE(96),
  /**
   * <code>PARTICLE_WATER_BUBBLE = 97;</code>
   */
  PARTICLE_WATER_BUBBLE(97),
  /**
   * <code>PARTICLE_WATER_DROP = 98;</code>
   */
  PARTICLE_WATER_DROP(98),
  /**
   * <code>PARTICLE_WATER_SPLASH = 99;</code>
   */
  PARTICLE_WATER_SPLASH(99),
  /**
   * <code>PARTICLE_WATER_WAKE = 100;</code>
   */
  PARTICLE_WATER_WAKE(100),
  /**
   * <code>PARTICLE_WAX_OFF = 101;</code>
   */
  PARTICLE_WAX_OFF(101),
  /**
   * <code>PARTICLE_WAX_ON = 102;</code>
   */
  PARTICLE_WAX_ON(102),
  /**
   * <code>PARTICLE_WHITE_ASH = 103;</code>
   */
  PARTICLE_WHITE_ASH(103),
  /**
   * <code>PARTICLE_WHITE_SMOKE = 104;</code>
   */
  PARTICLE_WHITE_SMOKE(104),
  UNRECOGNIZED(-1),
  ;

  /**
   * <code>PARTICLE_ASH = 0;</code>
   */
  public static final int PARTICLE_ASH_VALUE = 0;
  /**
   * <code>PARTICLE_BLOCK_CRACK = 1;</code>
   */
  public static final int PARTICLE_BLOCK_CRACK_VALUE = 1;
  /**
   * <code>PARTICLE_BLOCK_DUST = 2;</code>
   */
  public static final int PARTICLE_BLOCK_DUST_VALUE = 2;
  /**
   * <code>PARTICLE_BLOCK_MARKER = 3;</code>
   */
  public static final int PARTICLE_BLOCK_MARKER_VALUE = 3;
  /**
   * <code>PARTICLE_BUBBLE_COLUMN_UP = 4;</code>
   */
  public static final int PARTICLE_BUBBLE_COLUMN_UP_VALUE = 4;
  /**
   * <code>PARTICLE_BUBBLE_POP = 5;</code>
   */
  public static final int PARTICLE_BUBBLE_POP_VALUE = 5;
  /**
   * <code>PARTICLE_CAMPFIRE_COSY_SMOKE = 6;</code>
   */
  public static final int PARTICLE_CAMPFIRE_COSY_SMOKE_VALUE = 6;
  /**
   * <code>PARTICLE_CAMPFIRE_SIGNAL_SMOKE = 7;</code>
   */
  public static final int PARTICLE_CAMPFIRE_SIGNAL_SMOKE_VALUE = 7;
  /**
   * <code>PARTICLE_CHERRY_LEAVES = 8;</code>
   */
  public static final int PARTICLE_CHERRY_LEAVES_VALUE = 8;
  /**
   * <code>PARTICLE_CLOUD = 9;</code>
   */
  public static final int PARTICLE_CLOUD_VALUE = 9;
  /**
   * <code>PARTICLE_COMPOSTER = 10;</code>
   */
  public static final int PARTICLE_COMPOSTER_VALUE = 10;
  /**
   * <code>PARTICLE_CRIMSON_SPORE = 11;</code>
   */
  public static final int PARTICLE_CRIMSON_SPORE_VALUE = 11;
  /**
   * <code>PARTICLE_CRIT = 12;</code>
   */
  public static final int PARTICLE_CRIT_VALUE = 12;
  /**
   * <code>PARTICLE_CURRENT_DOWN = 13;</code>
   */
  public static final int PARTICLE_CURRENT_DOWN_VALUE = 13;
  /**
   * <code>PARTICLE_DAMAGE_INDICATOR = 14;</code>
   */
  public static final int PARTICLE_DAMAGE_INDICATOR_VALUE = 14;
  /**
   * <code>PARTICLE_DOLPHIN = 15;</code>
   */
  public static final int PARTICLE_DOLPHIN_VALUE = 15;
  /**
   * <code>PARTICLE_DRAGON_BREATH = 16;</code>
   */
  public static final int PARTICLE_DRAGON_BREATH_VALUE = 16;
  /**
   * <code>PARTICLE_DRIP_LAVA = 17;</code>
   */
  public static final int PARTICLE_DRIP_LAVA_VALUE = 17;
  /**
   * <code>PARTICLE_DRIP_WATER = 18;</code>
   */
  public static final int PARTICLE_DRIP_WATER_VALUE = 18;
  /**
   * <code>PARTICLE_DRIPPING_DRIPSTONE_LAVA = 19;</code>
   */
  public static final int PARTICLE_DRIPPING_DRIPSTONE_LAVA_VALUE = 19;
  /**
   * <code>PARTICLE_DRIPPING_DRIPSTONE_WATER = 20;</code>
   */
  public static final int PARTICLE_DRIPPING_DRIPSTONE_WATER_VALUE = 20;
  /**
   * <code>PARTICLE_DRIPPING_HONEY = 21;</code>
   */
  public static final int PARTICLE_DRIPPING_HONEY_VALUE = 21;
  /**
   * <code>PARTICLE_DRIPPING_OBSIDIAN_TEAR = 22;</code>
   */
  public static final int PARTICLE_DRIPPING_OBSIDIAN_TEAR_VALUE = 22;
  /**
   * <code>PARTICLE_DUST_COLOR_TRANSITION = 23;</code>
   */
  public static final int PARTICLE_DUST_COLOR_TRANSITION_VALUE = 23;
  /**
   * <code>PARTICLE_DUST_PLUME = 24;</code>
   */
  public static final int PARTICLE_DUST_PLUME_VALUE = 24;
  /**
   * <code>PARTICLE_EGG_CRACK = 25;</code>
   */
  public static final int PARTICLE_EGG_CRACK_VALUE = 25;
  /**
   * <code>PARTICLE_ELECTRIC_SPARK = 26;</code>
   */
  public static final int PARTICLE_ELECTRIC_SPARK_VALUE = 26;
  /**
   * <code>PARTICLE_ENCHANTMENT_TABLE = 27;</code>
   */
  public static final int PARTICLE_ENCHANTMENT_TABLE_VALUE = 27;
  /**
   * <code>PARTICLE_END_ROD = 28;</code>
   */
  public static final int PARTICLE_END_ROD_VALUE = 28;
  /**
   * <code>PARTICLE_EXPLOSION_HUGE = 29;</code>
   */
  public static final int PARTICLE_EXPLOSION_HUGE_VALUE = 29;
  /**
   * <code>PARTICLE_EXPLOSION_LARGE = 30;</code>
   */
  public static final int PARTICLE_EXPLOSION_LARGE_VALUE = 30;
  /**
   * <code>PARTICLE_EXPLOSION_NORMAL = 31;</code>
   */
  public static final int PARTICLE_EXPLOSION_NORMAL_VALUE = 31;
  /**
   * <code>PARTICLE_FALLING_DRIPSTONE_LAVA = 32;</code>
   */
  public static final int PARTICLE_FALLING_DRIPSTONE_LAVA_VALUE = 32;
  /**
   * <code>PARTICLE_FALLING_DRIPSTONE_WATER = 33;</code>
   */
  public static final int PARTICLE_FALLING_DRIPSTONE_WATER_VALUE = 33;
  /**
   * <code>PARTICLE_FALLING_DUST = 34;</code>
   */
  public static final int PARTICLE_FALLING_DUST_VALUE = 34;
  /**
   * <code>PARTICLE_FALLING_HONEY = 35;</code>
   */
  public static final int PARTICLE_FALLING_HONEY_VALUE = 35;
  /**
   * <code>PARTICLE_FALLING_LAVA = 36;</code>
   */
  public static final int PARTICLE_FALLING_LAVA_VALUE = 36;
  /**
   * <code>PARTICLE_FALLING_NECTAR = 37;</code>
   */
  public static final int PARTICLE_FALLING_NECTAR_VALUE = 37;
  /**
   * <code>PARTICLE_FALLING_OBSIDIAN_TEAR = 38;</code>
   */
  public static final int PARTICLE_FALLING_OBSIDIAN_TEAR_VALUE = 38;
  /**
   * <code>PARTICLE_FALLING_SPORE_BLOSSOM = 39;</code>
   */
  public static final int PARTICLE_FALLING_SPORE_BLOSSOM_VALUE = 39;
  /**
   * <code>PARTICLE_FALLING_WATER = 40;</code>
   */
  public static final int PARTICLE_FALLING_WATER_VALUE = 40;
  /**
   * <code>PARTICLE_FIREWORKS_SPARK = 41;</code>
   */
  public static final int PARTICLE_FIREWORKS_SPARK_VALUE = 41;
  /**
   * <code>PARTICLE_FLAME = 42;</code>
   */
  public static final int PARTICLE_FLAME_VALUE = 42;
  /**
   * <code>PARTICLE_FLASH = 43;</code>
   */
  public static final int PARTICLE_FLASH_VALUE = 43;
  /**
   * <code>PARTICLE_GLOW = 44;</code>
   */
  public static final int PARTICLE_GLOW_VALUE = 44;
  /**
   * <code>PARTICLE_GLOW_SQUID_INK = 45;</code>
   */
  public static final int PARTICLE_GLOW_SQUID_INK_VALUE = 45;
  /**
   * <code>PARTICLE_GUST = 46;</code>
   */
  public static final int PARTICLE_GUST_VALUE = 46;
  /**
   * <code>PARTICLE_GUST_DUST = 47;</code>
   */
  public static final int PARTICLE_GUST_DUST_VALUE = 47;
  /**
   * <code>PARTICLE_GUST_EMITTER = 48;</code>
   */
  public static final int PARTICLE_GUST_EMITTER_VALUE = 48;
  /**
   * <code>PARTICLE_HEART = 49;</code>
   */
  public static final int PARTICLE_HEART_VALUE = 49;
  /**
   * <code>PARTICLE_ITEM_CRACK = 50;</code>
   */
  public static final int PARTICLE_ITEM_CRACK_VALUE = 50;
  /**
   * <code>PARTICLE_LANDING_HONEY = 51;</code>
   */
  public static final int PARTICLE_LANDING_HONEY_VALUE = 51;
  /**
   * <code>PARTICLE_LANDING_LAVA = 52;</code>
   */
  public static final int PARTICLE_LANDING_LAVA_VALUE = 52;
  /**
   * <code>PARTICLE_LANDING_OBSIDIAN_TEAR = 53;</code>
   */
  public static final int PARTICLE_LANDING_OBSIDIAN_TEAR_VALUE = 53;
  /**
   * <code>PARTICLE_LAVA = 54;</code>
   */
  public static final int PARTICLE_LAVA_VALUE = 54;
  /**
   * <code>PARTICLE_LEGACY_BLOCK_CRACK = 55;</code>
   */
  public static final int PARTICLE_LEGACY_BLOCK_CRACK_VALUE = 55;
  /**
   * <code>PARTICLE_LEGACY_BLOCK_DUST = 56;</code>
   */
  public static final int PARTICLE_LEGACY_BLOCK_DUST_VALUE = 56;
  /**
   * <code>PARTICLE_LEGACY_FALLING_DUST = 57;</code>
   */
  public static final int PARTICLE_LEGACY_FALLING_DUST_VALUE = 57;
  /**
   * <code>PARTICLE_MOB_APPEARANCE = 58;</code>
   */
  public static final int PARTICLE_MOB_APPEARANCE_VALUE = 58;
  /**
   * <code>PARTICLE_NAUTILUS = 59;</code>
   */
  public static final int PARTICLE_NAUTILUS_VALUE = 59;
  /**
   * <code>PARTICLE_NOTE = 60;</code>
   */
  public static final int PARTICLE_NOTE_VALUE = 60;
  /**
   * <code>PARTICLE_PORTAL = 61;</code>
   */
  public static final int PARTICLE_PORTAL_VALUE = 61;
  /**
   * <code>PARTICLE_REDSTONE = 62;</code>
   */
  public static final int PARTICLE_REDSTONE_VALUE = 62;
  /**
   * <code>PARTICLE_REVERSE_PORTAL = 63;</code>
   */
  public static final int PARTICLE_REVERSE_PORTAL_VALUE = 63;
  /**
   * <code>PARTICLE_SCRAPE = 64;</code>
   */
  public static final int PARTICLE_SCRAPE_VALUE = 64;
  /**
   * <code>PARTICLE_SCULK_CHARGE = 65;</code>
   */
  public static final int PARTICLE_SCULK_CHARGE_VALUE = 65;
  /**
   * <code>PARTICLE_SCULK_CHARGE_POP = 66;</code>
   */
  public static final int PARTICLE_SCULK_CHARGE_POP_VALUE = 66;
  /**
   * <code>PARTICLE_SHRIEK = 67;</code>
   */
  public static final int PARTICLE_SHRIEK_VALUE = 67;
  /**
   * <code>PARTICLE_SLIME = 68;</code>
   */
  public static final int PARTICLE_SLIME_VALUE = 68;
  /**
   * <code>PARTICLE_SMALL_FLAME = 69;</code>
   */
  public static final int PARTICLE_SMALL_FLAME_VALUE = 69;
  /**
   * <code>PARTICLE_SMOKE_LARGE = 70;</code>
   */
  public static final int PARTICLE_SMOKE_LARGE_VALUE = 70;
  /**
   * <code>PARTICLE_SMOKE_NORMAL = 71;</code>
   */
  public static final int PARTICLE_SMOKE_NORMAL_VALUE = 71;
  /**
   * <code>PARTICLE_NORMAL = 72;</code>
   */
  public static final int PARTICLE_NORMAL_VALUE = 72;
  /**
   * <code>PARTICLE_SNEEZE = 73;</code>
   */
  public static final int PARTICLE_SNEEZE_VALUE = 73;
  /**
   * <code>PARTICLE_SNOW_SHOVEL = 74;</code>
   */
  public static final int PARTICLE_SNOW_SHOVEL_VALUE = 74;
  /**
   * <code>PARTICLE_SNOWBALL = 75;</code>
   */
  public static final int PARTICLE_SNOWBALL_VALUE = 75;
  /**
   * <code>PARTICLE_SONICFLAKE = 76;</code>
   */
  public static final int PARTICLE_SONICFLAKE_VALUE = 76;
  /**
   * <code>PARTICLE_SOUL = 77;</code>
   */
  public static final int PARTICLE_SOUL_VALUE = 77;
  /**
   * <code>PARTICLE_SOUL_FIRE_FLAME = 78;</code>
   */
  public static final int PARTICLE_SOUL_FIRE_FLAME_VALUE = 78;
  /**
   * <code>PARTICLE_SPELL = 79;</code>
   */
  public static final int PARTICLE_SPELL_VALUE = 79;
  /**
   * <code>PARTICLE_SPELL_INSTANT = 80;</code>
   */
  public static final int PARTICLE_SPELL_INSTANT_VALUE = 80;
  /**
   * <code>PARTICLE_SPELL_MOB = 81;</code>
   */
  public static final int PARTICLE_SPELL_MOB_VALUE = 81;
  /**
   * <code>PARTICLE_SPELL_MOB_AMBIENT = 82;</code>
   */
  public static final int PARTICLE_SPELL_MOB_AMBIENT_VALUE = 82;
  /**
   * <code>PARTICLE_SPELL_WITCH = 83;</code>
   */
  public static final int PARTICLE_SPELL_WITCH_VALUE = 83;
  /**
   * <code>PARTICLE_SPIT = 84;</code>
   */
  public static final int PARTICLE_SPIT_VALUE = 84;
  /**
   * <code>PARTICLE_SPORE_BLOSSOM_AIR = 85;</code>
   */
  public static final int PARTICLE_SPORE_BLOSSOM_AIR_VALUE = 85;
  /**
   * <code>PARTICLE_SQUID_INK = 86;</code>
   */
  public static final int PARTICLE_SQUID_INK_VALUE = 86;
  /**
   * <code>PARTICLE_SUSPENDED = 87;</code>
   */
  public static final int PARTICLE_SUSPENDED_VALUE = 87;
  /**
   * <code>PARTICLE_SUSPENDED_DEPTH = 88;</code>
   */
  public static final int PARTICLE_SUSPENDED_DEPTH_VALUE = 88;
  /**
   * <code>PARTICLE_SWEEP_ATTACK = 89;</code>
   */
  public static final int PARTICLE_SWEEP_ATTACK_VALUE = 89;
  /**
   * <code>PARTICLE_TOTEM = 90;</code>
   */
  public static final int PARTICLE_TOTEM_VALUE = 90;
  /**
   * <code>PARTICLE_TOWN_AURA = 91;</code>
   */
  public static final int PARTICLE_TOWN_AURA_VALUE = 91;
  /**
   * <code>PARTICLE_TRIAL_SPAWNER_DETECTION = 92;</code>
   */
  public static final int PARTICLE_TRIAL_SPAWNER_DETECTION_VALUE = 92;
  /**
   * <code>PARTICLE_VIBRATION = 93;</code>
   */
  public static final int PARTICLE_VIBRATION_VALUE = 93;
  /**
   * <code>PARTICLE_VILLAGER_ANGRY = 94;</code>
   */
  public static final int PARTICLE_VILLAGER_ANGRY_VALUE = 94;
  /**
   * <code>PARTICLE_VILLAGER_HAPPY = 95;</code>
   */
  public static final int PARTICLE_VILLAGER_HAPPY_VALUE = 95;
  /**
   * <code>PARTICLE_WARPED_SPORE = 96;</code>
   */
  public static final int PARTICLE_WARPED_SPORE_VALUE = 96;
  /**
   * <code>PARTICLE_WATER_BUBBLE = 97;</code>
   */
  public static final int PARTICLE_WATER_BUBBLE_VALUE = 97;
  /**
   * <code>PARTICLE_WATER_DROP = 98;</code>
   */
  public static final int PARTICLE_WATER_DROP_VALUE = 98;
  /**
   * <code>PARTICLE_WATER_SPLASH = 99;</code>
   */
  public static final int PARTICLE_WATER_SPLASH_VALUE = 99;
  /**
   * <code>PARTICLE_WATER_WAKE = 100;</code>
   */
  public static final int PARTICLE_WATER_WAKE_VALUE = 100;
  /**
   * <code>PARTICLE_WAX_OFF = 101;</code>
   */
  public static final int PARTICLE_WAX_OFF_VALUE = 101;
  /**
   * <code>PARTICLE_WAX_ON = 102;</code>
   */
  public static final int PARTICLE_WAX_ON_VALUE = 102;
  /**
   * <code>PARTICLE_WHITE_ASH = 103;</code>
   */
  public static final int PARTICLE_WHITE_ASH_VALUE = 103;
  /**
   * <code>PARTICLE_WHITE_SMOKE = 104;</code>
   */
  public static final int PARTICLE_WHITE_SMOKE_VALUE = 104;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static Particle valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static Particle forNumber(int value) {
    switch (value) {
      case 0: return PARTICLE_ASH;
      case 1: return PARTICLE_BLOCK_CRACK;
      case 2: return PARTICLE_BLOCK_DUST;
      case 3: return PARTICLE_BLOCK_MARKER;
      case 4: return PARTICLE_BUBBLE_COLUMN_UP;
      case 5: return PARTICLE_BUBBLE_POP;
      case 6: return PARTICLE_CAMPFIRE_COSY_SMOKE;
      case 7: return PARTICLE_CAMPFIRE_SIGNAL_SMOKE;
      case 8: return PARTICLE_CHERRY_LEAVES;
      case 9: return PARTICLE_CLOUD;
      case 10: return PARTICLE_COMPOSTER;
      case 11: return PARTICLE_CRIMSON_SPORE;
      case 12: return PARTICLE_CRIT;
      case 13: return PARTICLE_CURRENT_DOWN;
      case 14: return PARTICLE_DAMAGE_INDICATOR;
      case 15: return PARTICLE_DOLPHIN;
      case 16: return PARTICLE_DRAGON_BREATH;
      case 17: return PARTICLE_DRIP_LAVA;
      case 18: return PARTICLE_DRIP_WATER;
      case 19: return PARTICLE_DRIPPING_DRIPSTONE_LAVA;
      case 20: return PARTICLE_DRIPPING_DRIPSTONE_WATER;
      case 21: return PARTICLE_DRIPPING_HONEY;
      case 22: return PARTICLE_DRIPPING_OBSIDIAN_TEAR;
      case 23: return PARTICLE_DUST_COLOR_TRANSITION;
      case 24: return PARTICLE_DUST_PLUME;
      case 25: return PARTICLE_EGG_CRACK;
      case 26: return PARTICLE_ELECTRIC_SPARK;
      case 27: return PARTICLE_ENCHANTMENT_TABLE;
      case 28: return PARTICLE_END_ROD;
      case 29: return PARTICLE_EXPLOSION_HUGE;
      case 30: return PARTICLE_EXPLOSION_LARGE;
      case 31: return PARTICLE_EXPLOSION_NORMAL;
      case 32: return PARTICLE_FALLING_DRIPSTONE_LAVA;
      case 33: return PARTICLE_FALLING_DRIPSTONE_WATER;
      case 34: return PARTICLE_FALLING_DUST;
      case 35: return PARTICLE_FALLING_HONEY;
      case 36: return PARTICLE_FALLING_LAVA;
      case 37: return PARTICLE_FALLING_NECTAR;
      case 38: return PARTICLE_FALLING_OBSIDIAN_TEAR;
      case 39: return PARTICLE_FALLING_SPORE_BLOSSOM;
      case 40: return PARTICLE_FALLING_WATER;
      case 41: return PARTICLE_FIREWORKS_SPARK;
      case 42: return PARTICLE_FLAME;
      case 43: return PARTICLE_FLASH;
      case 44: return PARTICLE_GLOW;
      case 45: return PARTICLE_GLOW_SQUID_INK;
      case 46: return PARTICLE_GUST;
      case 47: return PARTICLE_GUST_DUST;
      case 48: return PARTICLE_GUST_EMITTER;
      case 49: return PARTICLE_HEART;
      case 50: return PARTICLE_ITEM_CRACK;
      case 51: return PARTICLE_LANDING_HONEY;
      case 52: return PARTICLE_LANDING_LAVA;
      case 53: return PARTICLE_LANDING_OBSIDIAN_TEAR;
      case 54: return PARTICLE_LAVA;
      case 55: return PARTICLE_LEGACY_BLOCK_CRACK;
      case 56: return PARTICLE_LEGACY_BLOCK_DUST;
      case 57: return PARTICLE_LEGACY_FALLING_DUST;
      case 58: return PARTICLE_MOB_APPEARANCE;
      case 59: return PARTICLE_NAUTILUS;
      case 60: return PARTICLE_NOTE;
      case 61: return PARTICLE_PORTAL;
      case 62: return PARTICLE_REDSTONE;
      case 63: return PARTICLE_REVERSE_PORTAL;
      case 64: return PARTICLE_SCRAPE;
      case 65: return PARTICLE_SCULK_CHARGE;
      case 66: return PARTICLE_SCULK_CHARGE_POP;
      case 67: return PARTICLE_SHRIEK;
      case 68: return PARTICLE_SLIME;
      case 69: return PARTICLE_SMALL_FLAME;
      case 70: return PARTICLE_SMOKE_LARGE;
      case 71: return PARTICLE_SMOKE_NORMAL;
      case 72: return PARTICLE_NORMAL;
      case 73: return PARTICLE_SNEEZE;
      case 74: return PARTICLE_SNOW_SHOVEL;
      case 75: return PARTICLE_SNOWBALL;
      case 76: return PARTICLE_SONICFLAKE;
      case 77: return PARTICLE_SOUL;
      case 78: return PARTICLE_SOUL_FIRE_FLAME;
      case 79: return PARTICLE_SPELL;
      case 80: return PARTICLE_SPELL_INSTANT;
      case 81: return PARTICLE_SPELL_MOB;
      case 82: return PARTICLE_SPELL_MOB_AMBIENT;
      case 83: return PARTICLE_SPELL_WITCH;
      case 84: return PARTICLE_SPIT;
      case 85: return PARTICLE_SPORE_BLOSSOM_AIR;
      case 86: return PARTICLE_SQUID_INK;
      case 87: return PARTICLE_SUSPENDED;
      case 88: return PARTICLE_SUSPENDED_DEPTH;
      case 89: return PARTICLE_SWEEP_ATTACK;
      case 90: return PARTICLE_TOTEM;
      case 91: return PARTICLE_TOWN_AURA;
      case 92: return PARTICLE_TRIAL_SPAWNER_DETECTION;
      case 93: return PARTICLE_VIBRATION;
      case 94: return PARTICLE_VILLAGER_ANGRY;
      case 95: return PARTICLE_VILLAGER_HAPPY;
      case 96: return PARTICLE_WARPED_SPORE;
      case 97: return PARTICLE_WATER_BUBBLE;
      case 98: return PARTICLE_WATER_DROP;
      case 99: return PARTICLE_WATER_SPLASH;
      case 100: return PARTICLE_WATER_WAKE;
      case 101: return PARTICLE_WAX_OFF;
      case 102: return PARTICLE_WAX_ON;
      case 103: return PARTICLE_WHITE_ASH;
      case 104: return PARTICLE_WHITE_SMOKE;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<Particle>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      Particle> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<Particle>() {
          public Particle findValueByNumber(int number) {
            return Particle.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalStateException(
          "Can't get the descriptor of an unrecognized enum value.");
    }
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return dev.twelveoclock.worldeditblockparticles.proto.ParticlesData.getDescriptor().getEnumTypes().get(0);
  }

  private static final Particle[] VALUES = values();

  public static Particle valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private Particle(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:store.Particle)
}

